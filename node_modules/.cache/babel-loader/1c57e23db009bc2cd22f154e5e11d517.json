{"ast":null,"code":"var _jsxFileName = \"/Users/kyle/Desktop/todo_app/src/Components/list.js\";\nimport React, { useReducer } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst List = ({\n  list\n}) => {\n  const [myArray, dispatch] = useReducer((myArray, {\n    type,\n    value\n  }) => {\n    switch (type) {\n      case \"add\":\n        return [...myArray, value];\n\n      case \"remove\":\n        return myArray.filter((_, index) => index !== value);\n\n      default:\n        return myArray;\n    }\n  }, list);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'left',\n      width: '380px',\n      marginLeft: '15px',\n      marginTop: '10%',\n      padding: '10px',\n      color: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, myArray && /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyle: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, myArray.map((e, i) => /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      height: '40px',\n      border: '1px solid black',\n      paddingTop: '10px',\n      fontSize: '24px',\n      marginBottom: '5px',\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, i + 1, \". \", e, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    style: {\n      marginRight: '10px'\n    },\n    onClick: () => dispatch({\n      type: \"remove\",\n      value: i\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  })))));\n};\n\nexport default List;","map":{"version":3,"sources":["/Users/kyle/Desktop/todo_app/src/Components/list.js"],"names":["React","useReducer","FontAwesomeIcon","faTrashAlt","List","list","myArray","dispatch","type","value","filter","_","index","textAlign","width","marginLeft","marginTop","padding","color","listStyle","map","e","i","height","border","paddingTop","fontSize","marginBottom","display","justifyContent","marginRight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACvB,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBN,UAAU,CAAC,CAACK,OAAD,EAAU;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAV,KAA8B;AACjE,YAAQD,IAAR;AACI,WAAK,KAAL;AACI,eAAO,CAAC,GAAGF,OAAJ,EAAaG,KAAb,CAAP;;AACJ,WAAK,QAAL;AACI,eAAOH,OAAO,CAACI,MAAR,CAAe,CAACC,CAAD,EAAIC,KAAJ,KAAcA,KAAK,KAAKH,KAAvC,CAAP;;AACJ;AACI,eAAOH,OAAP;AANR;AAQH,GATqC,EASnCD,IATmC,CAAtC;AAWA,sBACI;AAAK,IAAA,KAAK,EAAE;AACRQ,MAAAA,SAAS,EAAE,MADH;AAERC,MAAAA,KAAK,EAAE,OAFC;AAGRC,MAAAA,UAAU,EAAE,MAHJ;AAIRC,MAAAA,SAAS,EAAE,KAJH;AAKRC,MAAAA,OAAO,EAAE,MALD;AAMRC,MAAAA,KAAK,EAAE;AANC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKZ,OAAO,iBACJ;AAAI,IAAA,KAAK,EAAE;AAAEa,MAAAA,SAAS,EAAE;AAAb,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,OAAO,CAACc,GAAR,CAAY,CAACC,CAAD,EAAIC,CAAJ,kBACT;AAAI,IAAA,KAAK,EAAE;AACPC,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,MAAM,EAAE,iBAFD;AAGPC,MAAAA,UAAU,EAAE,MAHL;AAIPC,MAAAA,QAAQ,EAAE,MAJH;AAKPC,MAAAA,YAAY,EAAE,KALP;AAMPC,MAAAA,OAAO,EAAE,MANF;AAOPC,MAAAA,cAAc,EAAE;AAPT,KAAX;AASI,IAAA,GAAG,EAAEP,CATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUEA,CAAC,GAAG,CAVN,QAUWD,CAVX,eAWI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAElB,UAAvB;AACI,IAAA,KAAK,EAAE;AAAE2B,MAAAA,WAAW,EAAE;AAAf,KADX;AAEI,IAAA,OAAO,EAAE,MAAMvB,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,KAAK,EAAEa;AAAzB,KAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADH,CADL,CATR,CADJ;AAiCH,CA7CD;;AA+CA,eAAelB,IAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst List = ({ list }) => {\n    const [myArray, dispatch] = useReducer((myArray, { type, value }) => {\n        switch (type) {\n            case \"add\":\n                return [...myArray, value];\n            case \"remove\":\n                return myArray.filter((_, index) => index !== value);\n            default:\n                return myArray;\n        }\n    }, list);\n\n    return (\n        <div style={{\n            textAlign: 'left',\n            width: '380px',\n            marginLeft: '15px',\n            marginTop: '10%',\n            padding: '10px',\n            color: '#fff',\n        }}>\n            {myArray && (\n                <ul style={{ listStyle: 'none' }}>\n                    {myArray.map((e, i) => (\n                        <li style={{\n                            height: '40px',\n                            border: '1px solid black',\n                            paddingTop: '10px',\n                            fontSize: '24px',\n                            marginBottom: '5px',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                        }}\n                            key={i}\n                        >{i + 1}. {e}\n                            <FontAwesomeIcon icon={faTrashAlt}\n                                style={{ marginRight: '10px' }}\n                                onClick={() => dispatch({ type: \"remove\", value: i })}\n                            />\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    )\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}